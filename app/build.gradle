apply plugin: 'com.android.application'
//apply plugin: 'com.jaredsburrows.license'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply from: '../env/env.gradle'
apply from: '../utils.gradle'

//licenseReport {
//    // To generate the report, run the gradle task 'licenseDevDebugReport'.
//    generateHtmlReport = true
//    generateJsonReport = false
//}

def getGithubSourceCodeZipURL = { ->
    def gitRef = System.getenv("CI_COMMIT_REF_NAME")
    if (!gitRef) {
        gitRef = gitBranch()
    }
    def githubUrl = "https://github.com/telekom/syncplus/archive/refs/tags/" + gitRef + ".zip"

    copy {
        from("src/main/assets")
        into("src/main/assets")
        include("osdf.html")
        filter { it.replaceAll("@@GITHUB_SOURCECODE_ZIP_URL@@", githubUrl) }
        rename { String fileName ->
            fileName.replace("osdf", "osdf-git")
        }
    }

    return githubUrl
}

static def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}


android {
    compileSdkVersion 33

    signingConfigs {
        // signing configuration for a local debug.keystore file
        debug {
            storeFile file('../syncplus-debug.keystore')
            storePassword "syncplus"
            keyAlias "syncplus"
            keyPassword "syncplus"
        }
    }

    defaultConfig {
        applicationId "de.telekom.sync.plus"
        minSdkVersion 26    // Android 8
        targetSdkVersion 33 // Android 13
        versionCode 71
        versionName "1.6.4"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "java.util.Map<String, String[]>", "ENVIRON", getEnvHashMapAsString(env)
        buildConfigField "long", "VERSION_CODE", "${defaultConfig.versionCode}"
        buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
        resValue "string", "REDIRECT_SCHEME", redirectScheme
        resValue "string", "REDIRECT_URI", redirectUri


        /*builConfigField "String", "{GITHUB_SOURCECODE_ZIP_URL}", getGithubSourceCodeZipURL()*/
        print getGithubSourceCodeZipURL()
    }

    flavorDimensions "environment"
    productFlavors {
        dev {
            applicationIdSuffix ""
            versionNameSuffix "-dev"
        }
        vtu {
            applicationIdSuffix ""
            versionNameSuffix "-vtu"
        }
        beta {
            applicationIdSuffix ""
            versionNameSuffix "-beta"
        }
        prod {
            applicationIdSuffix ""
            versionNameSuffix ""
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
        resources.excludes.add("META-INF/groovy/*")
    }

}

dependencies {
    implementation project(':dtagsyncpluskit')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx
    implementation libs.appcompat
    implementation libs.fragment.ktx
    implementation libs.core.ktx
    implementation libs.constraintlayout
    implementation libs.lifecycle.extensions
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.multidex
    implementation libs.usabilla.form
    implementation libs.kotlin.serialization.converter.json

    implementation libs.material
    implementation libs.app.intro
    implementation libs.material.spinner
    implementation libs.circularprogressview

    implementation libs.room.runtime
    implementation libs.room.ktx
    kapt libs.room.compiler

    testImplementation libs.junit
    androidTestImplementation libs.junit.android
    androidTestImplementation libs.espresso.core

    implementation 'com.github.bitfireAT:cert4android:75d64c2'
    implementation 'com.github.bitfireAT:ical4android:43ef146'
    implementation 'com.github.bitfireAT:vcard4android:a6e9dc4'
}
